{"version":3,"sources":["webpack:///./src/components/app-footer/app-footer.scss?b085","webpack:///./src/components/app-content/app-content-view.scss?41a7","webpack:///./src/components/layout/content/content.scss?6a3d","webpack:///./src/components/layout/header/header.scss?3a9d","webpack:///./src/components/layout/footer/footer.scss?0879","webpack:///./src/components/layout/layout.scss?1d5e","webpack:///./src/components/tabs/tabs.scss?0f44","webpack:///./src/pages/pages.scss?b671","webpack:///./src/components/layout/content/content.tsx","webpack:///./src/components/layout/header/header.tsx","webpack:///./src/components/layout/footer/footer.tsx","webpack:///./src/components/layout/layout.tsx","webpack:///./src/api/endpoints.ts","webpack:///./src/pages/actions.ts","webpack:///./src/pages/reducer.ts","webpack:///./src/components/app-header/reducer.ts","webpack:///./src/utils/history/history.ts","webpack:///./src/components/app-header/actions.ts","webpack:///./src/store/root-reducer.ts","webpack:///./src/store/store.ts","webpack:///./src/components/table/table.tsx","webpack:///./src/components/button/button.tsx","webpack:///./src/components/modal-card/modal-card.tsx","webpack:///./src/utils/sort.ts","webpack:///./src/pages/selector.tsx","webpack:///./src/components/modal-confirm/modal-confirm.tsx","webpack:///./src/pages/all/all.tsx","webpack:///./src/pages/active/active.tsx","webpack:///./src/pages/deleted/deleted.tsx","webpack:///./src/components/app-header/app-header-view.tsx","webpack:///./src/components/app-header/app-header.tsx","webpack:///./src/components/app-footer/app-footer.tsx","webpack:///./src/components/tabs/tabs.tsx","webpack:///./src/components/app-content/app-content-view.tsx","webpack:///./src/components/app-content/app-content.tsx","webpack:///./src/app/app.tsx","webpack:///./src/index.tsx","webpack:///./src/components/modal-card/modal-card.scss?924c","webpack:///./src/components/app-header/app-header-view.scss?910c"],"names":["module","exports","Content","children","className","root","Header","Footer","Layout","GET_WEATHER_ICON","name","addCitySuccess","city","type","payload","setPending","switched","moveCity","newSortedArray","pageType","citiesSelector","state","cities","searchSelector","search","getHistory","addCityError","error","initState","all","active","deleted","isPending","action","position","length","newList","newActive","filter","item","id","map","temperature","icon","isDeleted","deletedCity","activeCity","query","history","router","middlewares","push","collapsed","diff","Table","dataSource","columns","loading","bordered","pagination","size","rowKey","record","Button","disabled","onClick","ModalCard","isVisible","onCancel","onSave","cityName","setCityName","cityTemperature","setCityTemperature","handleCityChange","event","value","handleTemperatureChange","title","visible","footer","key","src","alt","controlls","readOnly","onChange","getNewSortedCities","cityId","direction","currentIdx","findIndex","newSortedCities","slice","splice","useTable","dispatch","toggleVisiblity","currentCity","setCurrentCity","showModal","onRestore","restoreCity","getProperList","dataIndex","render","text","width","buttonGroup","buttonItem","content","okText","okType","cancelText","onOk","ModalConfirm","All","Active","Deleted","AppHeaderView","onQueryChange","onSearch","placeholder","onPressEnter","AppHeader","stateSearch","appHeaderProps","then","res","data","newCity","main","temp","weather","catch","err","preparedError","response","message","finally","AppFooter","Tabs","tabs","renderTabs","tab","TabPane","caption","AppContentView","onTabChange","table","AppContent","appContentProps","activeTab","initialState","confirm","Component","store","context","path","component","to","document","getElementById"],"mappings":"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","file":"static/js/bundle.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"app-footer_root_1efuJ\",\"footer\":\"app-footer_footer_1zfPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"app-content-view_root_2ks-Q\",\"table\":\"app-content-view_table_1-1ZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"content_root_3_0hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"header_root_3llYM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"footer_root_3wwho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"layout_root_5suHm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"tabs_root_3EpLE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"pages_icon_1cdeh\",\"button-group\":\"pages_button-group_20teo\",\"buttonGroup\":\"pages_button-group_20teo\",\"button-item\":\"pages_button-item_8PbWx\",\"buttonItem\":\"pages_button-item_8PbWx\"};","import React, { FunctionComponent } from 'react';\n\nimport styles from './content.scss';\n\nexport const Content: FunctionComponent<{}> = ({ children }) => {\n  return (\n    <main className={styles.root}>\n      {children}\n    </main>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\nimport styles from './header.scss';\n\nexport const Header: FunctionComponent<{}> = ({ children }) => {\n  return (\n    <header className = {styles.root}>\n      {children}\n    </header>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\nimport styles from './footer.scss';\n\nexport const Footer: FunctionComponent<{}> = ({ children }) => {\n  return (\n    <footer className={styles.root}>\n      {children}\n    </footer>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\nimport styles from './layout.scss';\n\nexport const Layout:FunctionComponent<{}> = ({ children }) => {\n  return <div className={styles.root}>{children}</div>;\n};\n","import { APPID } from '@/constants/app';\n\nexport const GET_WEATHER_BY_CITY_NAME = (cityName: string) => `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&APPID=${APPID}&units=metric`;\nexport const GET_WEATHER_ICON = (name: string) => `http://openweathermap.org/img/wn/${name}@2x.png`;\n","import { ICity } from './reducer';\nimport { GET_WEATHER_BY_CITY_NAME } from '@/api/endpoints';\nimport { Dispatch } from 'redux';\nimport axios from 'axios';\nimport { clearQuery } from '@/components/app-header/actions';\nimport { PageTypes } from '@/app/types';\n\nexport const ADD_CITY_SUCCESS = 'ADD_CITY_SUCCESS';\n\nexport interface IAddCitySuccess {\n  type: typeof ADD_CITY_SUCCESS;\n  payload: {\n    city: ICity,\n  };\n}\n\nexport const addCitySuccess = (city: ICity): IAddCitySuccess => {\n  return {\n    type: ADD_CITY_SUCCESS,\n    payload: {\n      city,\n    },\n  };\n};\n\nexport const MOVE_CITY = 'MOVE_CITY';\nexport const DELETE_CITY = 'DELETE_CITY';\nexport const RESTORE_CITY = 'RESTORE_CITY';\nexport const ADD_CITY_ERROR = 'ADD_CITY_ERROR';\nexport const SET_PENDING = 'SET_PENDING';\n\nexport interface ISetPending {\n  type: typeof SET_PENDING;\n  payload: {\n    switched: boolean,\n  };\n}\n\nexport const setPending = (switched: boolean): ISetPending => {\n  return {\n    type: SET_PENDING,\n    payload: {\n      switched,\n    },\n  };\n};\n\n\nexport interface IMoveCity {\n  type: typeof MOVE_CITY;\n  payload: {\n    newSortedArray: ICity[],\n    pageType: PageTypes,\n  };\n}\n\nexport const moveCity = (newSortedArray: ICity[], pageType: PageTypes): IMoveCity => {\n  return {\n    type: MOVE_CITY,\n    payload: {\n      newSortedArray,\n      pageType,\n    },\n  };\n};\n\nexport interface IDeleteCity {\n  type: typeof DELETE_CITY;\n  payload: {\n    id: string,\n  };\n}\n\nexport const deleteCity = (id: string): IDeleteCity => {\n  return {\n    type: DELETE_CITY,\n    payload: {\n      id,\n    },\n  };\n};\n\nexport interface IRestoreCity {\n  type: typeof RESTORE_CITY;\n  payload: {\n    id: string,\n  };\n}\n\nexport const restoreCity = (id: string): IRestoreCity => {\n  return {\n    type: RESTORE_CITY,\n    payload: {\n      id,\n    },\n  };\n};\n\nexport const searchCity = (name: string) => {\n  return (dispatch: Dispatch) => {\n    dispatch(setPending(true));\n    return axios(GET_WEATHER_BY_CITY_NAME(name))\n      .then(res => res.data)\n      .then(\n        data => {\n          const newCity = {\n            id: data.id,\n            name: data.name,\n            temperature: data.main.temp,\n            position: 0,\n            isDeleted: false,\n            icon: data.weather[0].icon,\n          };\n          dispatch(addCitySuccess(newCity));\n          dispatch(clearQuery());\n        },\n      )\n      .catch(err => {\n        let preparedError = 'Unknown error';\n        if (err.response) {\n          const { response: { data: { message } } } = err;\n          preparedError = message;\n        }\n\n        return dispatch(addCityError(preparedError));\n      })\n      .finally(() => dispatch(setPending(false)));\n  };\n};\n\nexport interface IAddCityError {\n  type: typeof ADD_CITY_ERROR;\n  payload: {\n    error: string,\n  };\n}\n\nexport const addCityError = (error: string): IAddCityError => {\n  return {\n    type: ADD_CITY_ERROR,\n    payload: {\n      error,\n    },\n  };\n};\n\nexport type ICitiesAction =\n  IAddCitySuccess\n  | IAddCityError\n  | IMoveCity\n  | IDeleteCity\n  | IRestoreCity\n  | ISetPending\n  ;\n","import {\n  ADD_CITY_SUCCESS,\n  ICitiesAction,\n  MOVE_CITY,\n  DELETE_CITY,\n  RESTORE_CITY,\n  SET_PENDING,\n  ADD_CITY_ERROR,\n} from './actions';\n\nconst initState: ICitiesState = {\n  all: [],\n  active: [],\n  deleted: [],\n  isPending: false,\n  error: '',\n};\n\nexport interface ICity {\n  id: string;\n  name: string;\n  temperature: number;\n  position: number;\n  isDeleted: boolean;\n  icon: string;\n}\n\nexport interface ICitiesState {\n  all: ICity[];\n  active: ICity[];\n  deleted: ICity[];\n  isPending: boolean;\n  error: string;\n}\n\nexport const citiesSelector = (state: { cities: ICitiesState }) => {\n  return state.cities;\n};\n\nconst citiesReducer = (state: any = initState, action: ICitiesAction) => {\n  switch (action.type) {\n\n    case ADD_CITY_SUCCESS: {\n      const { all } = state;\n      const { city } = action.payload;\n      city.position = all.length;\n      const sameCity = all.filter((item: ICity) => item.id === city.id);\n      let newList = [];\n      // if we have the same, just update it\n      if (sameCity.length) {\n        newList = all.map((item: ICity) => {\n          if (item.id === city.id) {\n            item.name = city.name;\n            item.temperature = city.temperature;\n            item.icon = city.icon;\n          }\n          return item;\n        });\n      } else {\n        newList = [...all, city];\n      }\n      const newActive = newList.filter((city: ICity) => city.isDeleted === false);\n      return {\n        ...state,\n        error: '',\n        all: newList,\n        active: [...newActive]\n      };\n    }\n\n    case ADD_CITY_ERROR: {\n      const { error } = action.payload;\n      return { ...state, error };\n    }\n\n    case MOVE_CITY: {\n      const { newSortedArray, pageType } = action.payload;\n\n      if (pageType === 'ALL') {\n        return { ...state, all: [...newSortedArray] };\n      }\n\n      return pageType === 'ACTIVE'\n        ? { ...state, active: [...newSortedArray] }\n        : { ...state, deleted: [...newSortedArray] };\n    }\n\n    case DELETE_CITY: {\n      const { id } = action.payload;\n      const { all } = state;\n      const newList = all.map((city: ICity) => {\n        if (city.id === id) {\n          city.isDeleted = true;\n        }\n        return city;\n      });\n      const deletedCity = all.filter((city: ICity) => city.isDeleted === true);\n      const activeCity = all.filter((city: ICity) => city.isDeleted === false);\n      return {\n        ...state,\n        all: [...newList],\n        active: [...activeCity],\n        deleted: [...deletedCity]\n      };\n    }\n\n    case RESTORE_CITY: {\n      const { id } = action.payload;\n      const { all } = state;\n      const newList = all.map((city: ICity) => {\n        if (city.id === id) {\n          city.isDeleted = false;\n        }\n        return city;\n      });\n      const deletedCity = all.filter((city: ICity) => city.isDeleted === true);\n      const activeCity = all.filter((city: ICity) => city.isDeleted === false);\n      return {\n        ...state,\n        all: [...newList],\n        active: [...activeCity],\n        deleted: [...deletedCity]\n      };\n    }\n\n    case SET_PENDING: {\n      const { switched } = action.payload;\n      return { ...state, isPending: switched };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const cities = {\n  cities: citiesReducer,\n};\n","import { CHANGE_SEARCH_QUERY, CLEAR_QUERY, ISearchAction } from './actions';\n\nexport interface ISearchState {\n  query: string;\n}\n\nconst initState: ISearchState = {\n  query: '',\n};\n\nexport const searchSelector = (state: { search: ISearchState }) => {\n  return state.search;\n};\n\nconst searchReducer = (state: any = initState, action: ISearchAction) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_QUERY: {\n      const { query } = action.payload;\n      return { ...state, query };\n    }\n    case CLEAR_QUERY: {\n      return initState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport const search = {\n  search: searchReducer,\n};\n","import { createBrowserHistory, History } from 'history';\n\nconst history: History = createBrowserHistory();\n\nexport const getHistory = () => {\n  return history;\n};\n","export const CHANGE_SEARCH_QUERY = 'CHANGE_SEARCH_QUERY';\nexport const CLEAR_QUERY = 'CLEAR_QUERY';\n\nexport interface IChangeSearchQuery {\n  type: typeof CHANGE_SEARCH_QUERY;\n  payload: {\n    query: string,\n  };\n}\n\nexport const changeSearchString = (query: string): IChangeSearchQuery => {\n  return {\n    type: CHANGE_SEARCH_QUERY,\n    payload: {\n      query,\n    },\n  };\n};\n\nexport interface IClearQuery {\n  type: typeof CLEAR_QUERY;\n}\n\nexport const clearQuery = (): IClearQuery => {\n  return {\n    type: CLEAR_QUERY,\n  };\n};\n\nexport type ISearchAction =\nIChangeSearchQuery\n|IClearQuery;\n","import { combineReducers } from 'redux';\nimport { cities } from '@/pages/reducer';\nimport { RouterState, connectRouter } from 'connected-react-router';\nimport { History } from 'history';\nimport { search } from '@/components/app-header/reducer';\n\nconst createRootReducer = (history: any) =>\n  combineReducers({\n    router: connectRouter(history),\n    ...cities,\n    ...search,\n  });\n\nexport default createRootReducer;\n","import { createStore, applyMiddleware, Middleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport createRootReducer from './root-reducer';\nimport { routerMiddleware } from 'connected-react-router';\nimport { getHistory } from '@/utils/history/history';\n\nconst history = getHistory();\nconst middlewares: Middleware[] = [];\nconst isDev = process.env.NODE_ENV !== 'production';\n\nmiddlewares.push(routerMiddleware(history));\nmiddlewares.push(thunk);\n\nconst logger = createLogger({\n  collapsed: true,\n  diff: true,\n});\n\nif (isDev) {\n  middlewares.push(logger);\n}\n\nexport const configureStore = (initialState?: any) => {\n  const store = createStore(\n    createRootReducer(history),\n    initialState,\n    applyMiddleware(...middlewares),\n  );\n\n  if (module.hot) {\n    module.hot.accept('./root-reducer', () => {\n      store.replaceReducer(createRootReducer(history));\n    });\n  }\n\n  return store;\n};\n","import React, { FunctionComponent } from 'react';\nimport { Table as AntTable } from 'antd';\nimport 'antd/lib/table/style/css';\n\nexport interface ITableProps {\n  dataSource: any[];\n  columns: any[];\n  loading: boolean;\n}\n\nexport const Table: FunctionComponent<ITableProps> = ({\n  dataSource,\n  columns,\n  loading,\n}) => {\n  return (\n    <AntTable\n      dataSource={dataSource}\n      columns={columns}\n      bordered\n      pagination={false}\n      size='small'\n      rowKey={(record: any) => record.id}\n      loading={loading}\n    />)\n    ;\n};\n","import React, { FunctionComponent } from 'react';\nimport { Button as AntButton } from 'antd';\nimport 'antd/lib/button/style/css';\n\nexport type ButtonSizes = 'small' | 'default' | 'large';\nexport type ButtonTypes = 'link' | 'default' | 'ghost' | 'primary' | 'dashed' | 'danger';\n\nexport interface IButton {\n  disabled?: boolean;\n  icon?: string;\n  size?: ButtonSizes;\n  type?: ButtonTypes;\n  onClick?: () => void;\n  className?: string;\n}\n\nexport const Button: FunctionComponent<IButton> = ({\n  disabled,\n  icon,\n  size,\n  type,\n  children,\n  onClick = () => false,\n  className = '',\n}) => {\n\n  return (\n    <AntButton\n      disabled={disabled}\n      icon={icon}\n      size={size}\n      type={type}\n      onClick={onClick}\n      className={className}\n    >\n      {children}\n    </AntButton>\n  );\n};\n","import React, { FunctionComponent, useState, useCallback, useEffect } from 'react';\nimport { Modal, Input } from 'antd';\nimport 'antd/lib/modal/style/css';\nimport 'antd/lib/input/style/css';\n\nimport styles from './modal-card.scss';\n\nimport { ICity } from '@/pages/reducer';\nimport { GET_WEATHER_ICON } from '@/api/endpoints';\nimport { Button } from '../button';\n\nexport interface IModalCardProps {\n  isVisible: boolean;\n  onCancel: () => void;\n  onSave: (value: any) => void;\n  city: ICity;\n\n}\n\nexport const ModalCard: FunctionComponent<IModalCardProps> = ({\n  isVisible,\n  onCancel,\n  onSave,\n  city,\n}) => {\n\n  if (!city) {\n    return <></>;\n  }\n\n  const { icon, name, temperature } = city;\n\n  const [cityName, setCityName] = useState(name);\n  const [cityTemperature, setCityTemperature] = useState(temperature);\n\n  useEffect(() => {\n    setCityName(name);\n    setCityTemperature(temperature);\n  }, [name, temperature])\n\n  const handleCityChange = useCallback((event) => {\n    const { target: { value } } = event;\n    setCityName(value);\n  }, [])\n\n  const handleTemperatureChange = useCallback((event) => {\n    const { target: { value } } = event;\n    setCityTemperature(value);\n  }, []);\n\n  return (\n    <Modal\n      title={`Card of city: ${name}`}\n      visible={isVisible}\n      onCancel={onCancel}\n      footer={[\n        <Button\n          key={1}\n          disabled={!cityName || !cityTemperature}\n          onClick={() => onSave({ ...city, name: cityName, temperature: cityTemperature })}\n        >\n          Save\n        </Button>,\n        <Button\n          key={2}\n          type='danger'\n          onClick={onCancel}\n        >\n          Cancel\n        </Button>]}\n    >\n      <div className={styles.root}>\n        <div className={styles.icon}>\n          <img src={GET_WEATHER_ICON(icon)} alt='icon'></img>\n        </div>\n        <div className={styles.controlls}>\n          <Input type=\"text\" value={cityName} readOnly={false} onChange={handleCityChange} />\n          <Input type=\"text\" value={cityTemperature} onChange={handleTemperatureChange} />\n        </div>\n      </div>\n    </Modal>\n\n  )\n}","import { ICity } from \"@/pages/reducer\";\n\nexport type SortDirection = 'UP' | 'DOWN';\n\nexport const getNewSortedCities = (\n  cities: ICity[],\n  cityId: string,\n  direction: SortDirection\n): ICity[] => {\n\n  const currentIdx = cities.findIndex((city: ICity) => city.id === cityId);\n\n  let newSortedCities = cities.slice();\n\n  if (direction === 'UP') {\n    if (currentIdx !== 0) {\n      newSortedCities.splice(currentIdx - 1, 0, cities[currentIdx]);\n      newSortedCities.splice(currentIdx + 1, 1);\n    }\n  } else {\n    if (currentIdx < cities.length) {\n      newSortedCities.splice(currentIdx + 2, 0, cities[currentIdx]);\n      newSortedCities.splice(currentIdx, 1);\n    }\n  }\n  return newSortedCities;\n};\n","import React, { useState, useCallback } from 'react';\nimport { Dispatch } from 'redux';\n\nimport styles from './pages.scss';\n\nimport { ICity, ICitiesState } from './reducer';\nimport { Button } from '@/components/button';\nimport { moveCity, restoreCity, addCitySuccess } from './actions';\nimport { PageTypes } from '@/app/types';\nimport { GET_WEATHER_ICON } from '@/api/endpoints';\nimport { ModalCard } from '@/components/modal-card';\nimport { ModalConfirm } from '@/components/modal-confirm';\nimport { getNewSortedCities } from '@/utils/sort';\n\nexport const useTable = (state: ICitiesState, dispatch: Dispatch, pageType: PageTypes) => {\n\n  const [isVisible, toggleVisiblity] = useState(false);\n  const [currentCity, setCurrentCity] = useState();\n\n  const onCancel = useCallback(() => {\n    toggleVisiblity(false);\n  }, []);\n\n  const onSave = useCallback((city: ICity) => {\n    dispatch(addCitySuccess(city));\n    toggleVisiblity(false);\n  }, []);\n\n  const showModal = useCallback((city: ICity) => {\n    setCurrentCity(city);\n    toggleVisiblity(!isVisible);\n  }, []);\n\n  const onRestore = useCallback((id: string) => {\n    dispatch(restoreCity(id));\n  }, [dispatch]);\n\n  const getProperList = () => {\n    switch (pageType) {\n      case 'ALL': {\n        return state.all;\n      }\n      case 'ACTIVE': {\n        return state.active;\n      }\n      case 'DELETED': {\n        return state.deleted;\n      }\n      default:\n        return state.all;\n    }\n  }\n\n  const properList = getProperList();\n\n  const dataSource = properList.slice();\n\n  const columns = [\n    {\n      title: 'City',\n      dataIndex: 'city',\n      key: 'city',\n      render: (text: string, record: any) =>\n        <>\n          <Button\n            type='link'\n            onClick={() => showModal(record)}\n          >\n            {record.name}\n          </Button>\n          {<ModalCard\n            isVisible={isVisible}\n            onCancel={onCancel}\n            onSave={onSave}\n            city={currentCity}\n          />}\n        </>,\n    },\n    {\n      title: 'Icon',\n      dataIndex: 'icon',\n      key: 'icon',\n      width: 100,\n      render: (text: string, record: any) =>\n        <img className={styles.icon} src={GET_WEATHER_ICON(record.icon)} alt='icon' />\n    },\n    {\n      title: 'Temperature',\n      dataIndex: 'temperature',\n      key: 'temperature',\n      width: 100,\n    },\n    {\n      title: 'Actions',\n      dataIndex: '',\n      key: 'actions',\n      render: (text: string, record: any) =>\n        <div className={styles.buttonGroup}>\n          <Button\n            icon='caret-up'\n            size='small'\n            onClick={() => {\n              const newSortedArray = getNewSortedCities(dataSource, record.id, 'UP');\n              dispatch(moveCity(newSortedArray, pageType))\n            }\n            }\n            className={styles.buttonItem}\n          >\n            Up\n          </Button>\n          <Button\n            icon='caret-down'\n            size='small'\n            onClick={() => {\n              const newSortedArray = getNewSortedCities(dataSource, record.id, 'DOWN');\n              dispatch(moveCity(newSortedArray, pageType))\n            }\n            }\n            className={styles.buttonItem}\n          >\n            Down\n            </Button>\n          <Button\n            icon={record.isDeleted ? 'select' : 'rest'}\n            type={record.isDeleted ? 'primary' : 'danger'}\n            size='small'\n            onClick={record.isDeleted ? () => onRestore(record.id) : () => ModalConfirm(record, dispatch)}\n            className={styles.buttonItem}\n          >\n            {record.isDeleted ? 'Restore' : 'Remove'}\n          </Button>\n        </div>,\n    },\n  ];\n\n  return {\n    dataSource,\n    columns,\n  };\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport 'antd/lib/modal/style/css';\nimport 'antd/lib/input/style/css';\nimport { ICity } from '@/pages/reducer';\nimport { Dispatch } from 'redux';\nimport { deleteCity } from '@/pages/actions';\n\nconst { confirm } = Modal;\n\nexport const ModalConfirm = (city: ICity, dispatch: Dispatch) => {\n  const onCancel = () => false;\n\n  return confirm({\n    title: `Are you sure delete the city ${city.name} ?`,\n    content: 'Some descriptions',\n    okText: 'Yes',\n    okType: 'danger',\n    cancelText: 'No',\n    onOk() {\n      dispatch(deleteCity(city.id));\n    },\n    onCancel,\n  });\n};\n","\nimport React, { FunctionComponent } from 'react';\n\nimport styles from '../pages.scss';\n\nimport { Table } from '@/components/table';\nimport { useTable } from '../selector';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { citiesSelector } from '../reducer';\n\nexport const All: FunctionComponent<{}> = () => {\n\n  const dispatch = useDispatch();\n\n  const state = useSelector(citiesSelector);\n  const { isPending } = state;\n  const { dataSource, columns } = useTable(state, dispatch, 'ALL');\n\n  return <div className={styles.root}>\n    <Table columns={columns} dataSource={dataSource} loading={isPending} />\n  </div>;\n};\n","import React, { FunctionComponent } from 'react';\n\nimport styles from '../pages.scss';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { citiesSelector } from '../reducer';\nimport { useTable } from '../selector';\nimport { Table } from '@/components/table';\n\nexport const Active: FunctionComponent<{}> = () => {\n\n  const dispatch = useDispatch();\n\n  const state = useSelector(citiesSelector);\n  const { isPending } = state;\n  const { dataSource, columns } = useTable(state, dispatch, 'ACTIVE');\n\n  return <div className={styles.root}>\n    <Table columns={columns} dataSource={dataSource} loading={isPending} />\n  </div>;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport styles from '../pages.scss';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { citiesSelector } from '../reducer';\nimport { useTable } from '../selector';\nimport { Table } from '@/components/table';\n\nexport const Deleted: FunctionComponent<{}> = () => {\n\n  const dispatch = useDispatch();\n\n  const state = useSelector(citiesSelector);\n  const { isPending } = state;\n  const { dataSource, columns } = useTable(state, dispatch, 'DELETED');\n\n  return <div className={styles.root}>\n    <Table columns={columns} dataSource={dataSource} loading={isPending} />\n  </div>;\n}\n","import React, { FunctionComponent } from 'react';\nimport { Input, Button } from 'antd';\nimport 'antd/lib/input/style/css';\nimport 'antd/lib/page-header/style/css';\n\nimport styles from './app-header-view.scss';\n\nexport interface IAppHeaderViewProps {\n  error?: string;\n  onQueryChange: (value: any) => void;\n  onSearch: () => void;\n  query: string;\n}\n\nexport const AppHeaderView: FunctionComponent<IAppHeaderViewProps> = ({\n  error,\n  onQueryChange,\n  onSearch,\n  query,\n}) => {\n  return (\n    <div className={styles.root}>\n      <div className={styles.error}>{error}</div>\n      <div className={styles.search}>\n        <Input\n          placeholder='input city name'\n          onChange={onQueryChange}\n          onPressEnter={onSearch}\n          value={query}\n        />\n        <Button type='primary' icon='search' onClick={onSearch}>Search</Button>\n      </div>\n    </div>\n  );\n};\n","import React, { FunctionComponent, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AppHeaderView } from './app-header-view';\nimport { changeSearchString } from './actions';\nimport { searchSelector } from './reducer';\nimport { searchCity } from '@/pages/actions';\nimport { citiesSelector } from '@/pages/reducer';\n\nexport const AppHeader: FunctionComponent<{}> = () => {\n\n  const dispatch = useDispatch();\n  const stateSearch = useSelector(searchSelector);\n  const stateCities = useSelector(citiesSelector);\n  const { error } = stateCities;\n  const { query } = stateSearch;\n\n  const onQueryChange = useCallback((event) => {\n    const { target: { value } } = event;\n    dispatch(changeSearchString(value));\n  }, [dispatch]);\n\n  const onSearch = useCallback(() => {\n    dispatch(searchCity(query));\n  }, [dispatch, query])\n\n  const appHeaderProps = {\n    error,\n    onQueryChange,\n    onSearch,\n    query,\n  };\n\n  return (\n    <AppHeaderView  {...appHeaderProps} />\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport styles from './app-footer.scss';\n\nexport const AppFooter: FunctionComponent<{}> = () => {\n\n  return (\n      <footer className={styles.root}>\n        <div className={styles.footer}>weather 2019</div>\n      </footer>\n  );\n};\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport { Tabs as AntTabs } from 'antd';\nimport 'antd/lib/tabs/style/css';\n\nimport styles from './tabs.scss';\n\nconst { TabPane } = AntTabs;\n\nexport interface ITab {\n  caption: string;\n  id: string;\n}\nexport interface ITabsProps {\n  onChange: (value: any) => void;\n  tabs: ITab[];\n  content?: ReactNode[];\n}\n\nexport const Tabs: FunctionComponent<ITabsProps> = ({ onChange, tabs, content }) => {\n\n  const renderTabs = tabs.map(tab => {\n    return <TabPane tab={tab.caption} key={tab.id}>{content}</TabPane>;\n  });\n\n  return (\n    <div className={styles.root}>\n      <AntTabs onChange={onChange} type='card' size='small'>\n        {renderTabs}\n      </AntTabs>\n    </div>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\nimport styles from './app-content-view.scss';\n\nimport { Tabs } from '@/components/tabs';\nimport { ITab } from '../tabs/tabs';\n\nexport interface IAppContentViewProps {\n  onTabChange: (value: any) => void;\n  tabs: ITab[];\n}\n\nexport const AppContentView: FunctionComponent<IAppContentViewProps> = ({ onTabChange, tabs, children }) => {\n  return (\n    <div className={styles.root}>\n      <Tabs onChange={onTabChange} tabs={tabs} />\n      <div className={styles.table}>\n        {children}\n      </div>\n    </div>\n  );\n};\n","import React, { FunctionComponent, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { AppContentView } from './app-content-view';\n\nexport const AppContent: FunctionComponent<{}> = ({ children }) => {\n\n  const dispatch = useDispatch();\n\n  const onTabChange = useCallback((activeTab: string) => {\n    dispatch(push(`/${activeTab}`));\n  }, [dispatch]);\n\n  const appContentProps = {\n    onTabChange,\n    tabs: [\n      {\n        caption: 'All',\n        id: 'all',\n      },\n      {\n        caption: 'Active',\n        id: 'active',\n      },\n      {\n        caption: 'Deleted',\n        id: 'deleted',\n      }],\n    children,\n  };\n\n  return (\n    <AppContentView  {...appContentProps} />\n  );\n};\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { hot } from 'react-hot-loader/root';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Provider, ReactReduxContext } from 'react-redux';\n\nimport '@/styles/global.scss';\n\nimport { Header, Content, Footer, Layout } from '@/components/layout';\nimport { configureStore } from '@/store/store';\nimport { All } from '@/pages/all';\nimport { Active } from '@/pages/active';\nimport { Deleted } from '@/pages/deleted';\nimport { AppHeader } from '@/components/app-header';\nimport { AppFooter } from '@/components/app-footer';\nimport { getHistory } from '@/utils/history/history';\nimport { AppContent } from '@/components/app-content';\n\nconst store = configureStore();\n\nclass App extends React.Component<{}> {\n  public render() {\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={getHistory()} context={ReactReduxContext}>\n          <Layout>\n            <Header>\n              <AppHeader />\n            </Header>\n            <Content>\n              <AppContent>\n                <Switch>\n                  <Route path='/all' component={All} />\n                  <Route path='/active' component={Active} />\n                  <Route path='/deleted' component={Deleted} />\n                  <Redirect to='/all' />\n                </Switch>\n              </AppContent>\n            </Content>\n            <Footer>\n              <AppFooter />\n            </Footer>\n          </Layout>\n        </ConnectedRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default hot(App);\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport App from './app/app';\n\nrender(<App />, document.getElementById('reactContainer'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"modal-card_root_1EiOk\",\"icon\":\"modal-card_icon_2uuLk\",\"controlls\":\"modal-card_controlls_1XH39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"app-header-view_root_3s5vH\",\"search\":\"app-header-view_search_3nTcg\",\"error\":\"app-header-view_error_2YXUY\"};"],"sourceRoot":""}