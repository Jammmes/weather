{"version":3,"sources":["webpack:///./src/components/app-footer/app-footer.scss?b085","webpack:///./src/components/app-content/app-content-view.scss?41a7","webpack:///./src/components/layout/content/content.scss?6a3d","webpack:///./src/components/layout/header/header.scss?3a9d","webpack:///./src/components/layout/footer/footer.scss?0879","webpack:///./src/components/layout/layout.scss?1d5e","webpack:///./src/components/tabs/tabs.scss?0f44","webpack:///./src/pages/pages.scss?b671","webpack:///./src/components/layout/content/content.tsx","webpack:///./src/components/layout/header/header.tsx","webpack:///./src/components/layout/footer/footer.tsx","webpack:///./src/components/layout/layout.tsx","webpack:///./src/api/endpoints.ts","webpack:///./src/pages/actions.ts","webpack:///./src/pages/reducer.ts","webpack:///./src/components/app-header/reducer.ts","webpack:///./src/utils/history/history.ts","webpack:///./src/components/app-header/actions.ts","webpack:///./src/store/root-reducer.ts","webpack:///./src/store/store.ts","webpack:///./src/components/table/table.tsx","webpack:///./src/components/button/button.tsx","webpack:///./src/components/modal-card/modal-card.tsx","webpack:///./src/pages/selector.tsx","webpack:///./src/components/modal-confirm/modal-confirm.tsx","webpack:///./src/pages/all/all.tsx","webpack:///./src/pages/active/active.tsx","webpack:///./src/pages/deleted/deleted.tsx","webpack:///./src/components/app-header/app-header-view.tsx","webpack:///./src/components/app-header/app-header.tsx","webpack:///./src/components/app-footer/app-footer.tsx","webpack:///./src/components/tabs/tabs.tsx","webpack:///./src/components/app-content/app-content-view.tsx","webpack:///./src/components/app-content/app-content.tsx","webpack:///./src/app/app.tsx","webpack:///./src/index.tsx","webpack:///./src/components/modal-card/modal-card.scss?924c","webpack:///./src/components/app-header/app-header-view.scss?910c"],"names":["module","exports","Content","children","className","root","Header","Footer","Layout","GET_WEATHER_ICON","name","addCitySuccess","city","type","payload","setPending","switched","citiesSelector","state","cities","searchSelector","search","getHistory","addCityError","error","initState","list","isPending","action","position","length","newList","filter","item","id","map","temperature","icon","isDeleted","query","history","router","middlewares","push","collapsed","diff","Table","dataSource","columns","loading","bordered","pagination","size","rowKey","record","Button","disabled","onClick","ModalCard","isVisible","onCancel","onSave","cityName","setCityName","cityTemperature","setCityTemperature","handleCityChange","event","value","handleTemperatureChange","title","visible","footer","key","src","alt","controlls","readOnly","onChange","useTable","dispatch","pageType","toggleVisiblity","currentCity","setCurrentCity","showModal","onRestore","restoreCity","slice","sort","a","b","dataIndex","render","text","width","buttonGroup","buttonItem","content","okText","okType","cancelText","onOk","ModalConfirm","All","Active","Deleted","AppHeaderView","onQueryChange","onSearch","placeholder","onPressEnter","AppHeader","stateSearch","appHeaderProps","then","res","data","newCity","main","temp","weather","catch","err","preparedError","response","message","finally","AppFooter","Tabs","tabs","renderTabs","tab","TabPane","caption","AppContentView","onTabChange","table","AppContent","appContentProps","activeTab","initialState","confirm","Component","store","context","path","component","to","document","getElementById"],"mappings":"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","file":"static/js/bundle.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"app-footer_root_1efuJ\",\"footer\":\"app-footer_footer_1zfPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"app-content-view_root_2ks-Q\",\"table\":\"app-content-view_table_1-1ZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"content_root_3_0hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"header_root_3llYM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"footer_root_3wwho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"layout_root_5suHm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"tabs_root_3EpLE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"pages_icon_1cdeh\",\"button-group\":\"pages_button-group_20teo\",\"buttonGroup\":\"pages_button-group_20teo\",\"button-item\":\"pages_button-item_8PbWx\",\"buttonItem\":\"pages_button-item_8PbWx\"};","import React, { FunctionComponent } from 'react';\r\n\r\nimport styles from './content.scss';\r\n\r\nexport const Content: FunctionComponent<{}> = ({ children }) => {\r\n  return (\r\n    <main className={styles.root}>\r\n      {children}\r\n    </main>\r\n  );\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport styles from './header.scss';\r\n\r\nexport const Header: FunctionComponent<{}> = ({ children }) => {\r\n  return (\r\n    <header className = {styles.root}>\r\n      {children}\r\n    </header>\r\n  );\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport styles from './footer.scss';\r\n\r\nexport const Footer: FunctionComponent<{}> = ({ children }) => {\r\n  return (\r\n    <footer className={styles.root}>\r\n      {children}\r\n    </footer>\r\n  );\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport styles from './layout.scss';\r\n\r\nexport const Layout:FunctionComponent<{}> = ({ children }) => {\r\n  return <div className={styles.root}>{children}</div>;\r\n};\r\n","import { APPID } from '@/constants/app';\r\n\r\nexport const GET_WEATHER_BY_CITY_NAME = (cityName: string) => `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&APPID=${APPID}&units=metric`;\r\nexport const GET_WEATHER_ICON = (name: string) => `http://openweathermap.org/img/wn/${name}@2x.png`;\r\n","import { ICity } from './reducer';\r\nimport { GET_WEATHER_BY_CITY_NAME } from '@/api/endpoints';\r\nimport { Dispatch } from 'redux';\r\nimport axios from 'axios';\r\nimport { clearQuery } from '@/components/app-header/actions';\r\n\r\nexport const ADD_CITY_SUCCESS = 'ADD_CITY_SUCCESS';\r\n\r\nexport interface IAddCitySuccess {\r\n  type: typeof ADD_CITY_SUCCESS;\r\n  payload: {\r\n    city: ICity,\r\n  };\r\n}\r\n\r\nexport const addCitySuccess = (city: ICity): IAddCitySuccess => {\r\n  return {\r\n    type: ADD_CITY_SUCCESS,\r\n    payload: {\r\n      city,\r\n    },\r\n  };\r\n};\r\n\r\nexport const MOVE_DOWN_CITY = 'MOVE_DOWN_CITY';\r\nexport const MOVE_UP_CITY = 'MOVE_UP_CITY';\r\nexport const REMOVE_CITY = 'REMOVE_CITY';\r\nexport const RESTORE_CITY = 'RESTORE_CITY';\r\nexport const ADD_CITY_ERROR = 'ADD_CITY_ERROR';\r\nexport const SET_PENDING = 'SET_PENDING';\r\n\r\nexport interface ISetPending {\r\n  type: typeof SET_PENDING;\r\n  payload: {\r\n    switched: boolean,\r\n  };\r\n}\r\n\r\nexport const setPending = (switched: boolean): ISetPending => {\r\n  return {\r\n    type: SET_PENDING,\r\n    payload: {\r\n      switched,\r\n    },\r\n  };\r\n};\r\n\r\nexport interface IMoveDownCity {\r\n  type: typeof MOVE_DOWN_CITY;\r\n  payload: {\r\n    id: string,\r\n  };\r\n}\r\n\r\nexport const moveDownCity = (id: string): IMoveDownCity => {\r\n  return {\r\n    type: MOVE_DOWN_CITY,\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n};\r\n\r\nexport interface IMoveUpCity {\r\n  type: typeof MOVE_UP_CITY;\r\n  payload: {\r\n    id: string,\r\n  };\r\n}\r\n\r\nexport const moveUpCity = (id: string): IMoveUpCity => {\r\n  return {\r\n    type: MOVE_UP_CITY,\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n};\r\n\r\nexport interface IRemoveCity {\r\n  type: typeof REMOVE_CITY;\r\n  payload: {\r\n    id: string,\r\n  };\r\n}\r\n\r\nexport const removeCity = (id: string): IRemoveCity => {\r\n  return {\r\n    type: REMOVE_CITY,\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n};\r\n\r\nexport interface IRestoreCity {\r\n  type: typeof RESTORE_CITY;\r\n  payload: {\r\n    id: string,\r\n  };\r\n}\r\n\r\nexport const restoreCity = (id: string): IRestoreCity => {\r\n  return {\r\n    type: RESTORE_CITY,\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const searchCity = (name: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch(setPending(true));\r\n    return axios(GET_WEATHER_BY_CITY_NAME(name))\r\n      .then(res => res.data)\r\n      .then(\r\n        data => {\r\n          const newCity = {\r\n            id: data.id,\r\n            name: data.name,\r\n            temperature: data.main.temp,\r\n            position: 0,\r\n            isDeleted: false,\r\n            icon: data.weather[0].icon,\r\n          };\r\n          dispatch(addCitySuccess(newCity));\r\n          dispatch(clearQuery());\r\n        },\r\n      )\r\n      .catch(err => {\r\n        let preparedError = 'Unknown error';\r\n        if (err.response) {\r\n          const { response: { data: { message } } } = err;\r\n          preparedError = message;\r\n        }\r\n\r\n        return dispatch(addCityError(preparedError));\r\n      })\r\n      .finally(() => dispatch(setPending(false)));\r\n  };\r\n};\r\n\r\nexport interface IAddCityError {\r\n  type: typeof ADD_CITY_ERROR;\r\n  payload: {\r\n    error: string,\r\n  };\r\n}\r\n\r\nexport const addCityError = (error: string): IAddCityError => {\r\n  return {\r\n    type: ADD_CITY_ERROR,\r\n    payload: {\r\n      error,\r\n    },\r\n  };\r\n};\r\n\r\nexport type ICitiesAction =\r\n  IAddCitySuccess\r\n  | IAddCityError\r\n  | IMoveDownCity\r\n  | IMoveUpCity\r\n  | IRemoveCity\r\n  | IRestoreCity\r\n  | ISetPending\r\n  ;\r\n","import {\r\n  ADD_CITY_SUCCESS,\r\n  MOVE_UP_CITY,\r\n  ICitiesAction,\r\n  MOVE_DOWN_CITY,\r\n  REMOVE_CITY,\r\n  RESTORE_CITY,\r\n  SET_PENDING,\r\n  ADD_CITY_ERROR,\r\n} from './actions';\r\n\r\nconst initState: ICitiesState = {\r\n  list: [],\r\n  isPending: false,\r\n  error: '',\r\n};\r\n\r\nexport interface ICity {\r\n  id: string;\r\n  name: string;\r\n  temperature: number;\r\n  position: number;\r\n  isDeleted: boolean;\r\n  icon: string;\r\n}\r\n\r\nexport interface ICitiesState {\r\n  list: ICity[];\r\n  isPending: boolean;\r\n  error: string;\r\n}\r\n\r\nexport const citiesSelector = (state: { cities: ICitiesState }) => {\r\n  return state.cities;\r\n};\r\n\r\nconst citiesReducer = (state: any = initState, action: ICitiesAction) => {\r\n  switch (action.type) {\r\n\r\n    case ADD_CITY_SUCCESS: {\r\n      const { list } = state;\r\n      const { city } = action.payload;\r\n      city.position = list.length;\r\n      const sameCity = list.filter((item: ICity) => item.id === city.id);\r\n      let newList = [];\r\n      // if we have the same, just update it\r\n      if (sameCity.length) {\r\n        newList = list.map((item: ICity) => {\r\n          if (item.id === city.id) {\r\n            item.name = city.name;\r\n            item.temperature = city.temperature;\r\n            item.icon = city.icon;\r\n          }\r\n          return item;\r\n        });\r\n      } else {\r\n        newList = [...list, city];\r\n      }\r\n      return { ...state, error: '', list: newList };\r\n    }\r\n\r\n    case ADD_CITY_ERROR: {\r\n      const { error } = action.payload;\r\n      return { ...state, error };\r\n    }\r\n\r\n    case MOVE_UP_CITY: {\r\n      const { id } = action.payload;\r\n      const { list } = state;\r\n      const newList = list.map((city: ICity) => {\r\n        if (city.id === id) {\r\n          city.position++;\r\n        }\r\n        return city;\r\n      });\r\n      return { ...state, list: [...newList] };\r\n    }\r\n\r\n    case MOVE_DOWN_CITY: {\r\n      const { id } = action.payload;\r\n      const { list } = state;\r\n      const newList = list.map((city: ICity) => {\r\n        if (city.id === id) {\r\n          city.position--;\r\n        }\r\n        return city;\r\n      });\r\n      return { ...state, list: [...newList] };\r\n    }\r\n\r\n    case REMOVE_CITY: {\r\n      const { id } = action.payload;\r\n      const { list } = state;\r\n      const newList = list.map((city: ICity) => {\r\n        if (city.id === id) {\r\n          city.isDeleted = true;\r\n        }\r\n        return city;\r\n      });\r\n      return { ...state, list: [...newList] };\r\n    }\r\n\r\n    case RESTORE_CITY: {\r\n      const { id } = action.payload;\r\n      const { list } = state;\r\n      const newList = list.map((city: ICity) => {\r\n        if (city.id === id) {\r\n          city.isDeleted = false;\r\n        }\r\n        return city;\r\n      });\r\n      return { ...state, list: [...newList] };\r\n    }\r\n\r\n    case SET_PENDING: {\r\n      const { switched } = action.payload;\r\n      return { ...state, isPending: switched };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const cities = {\r\n  cities: citiesReducer,\r\n};\r\n","import { CHANGE_SEARCH_QUERY, CLEAR_QUERY, ISearchAction } from './actions';\r\n\r\nexport interface ISearchState {\r\n  query: string;\r\n}\r\n\r\nconst initState: ISearchState = {\r\n  query: '',\r\n};\r\n\r\nexport const searchSelector = (state: { search: ISearchState }) => {\r\n  return state.search;\r\n};\r\n\r\nconst searchReducer = (state: any = initState, action: ISearchAction) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_QUERY: {\r\n      const { query } = action.payload;\r\n      return { ...state, query };\r\n    }\r\n    case CLEAR_QUERY: {\r\n      return initState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const search = {\r\n  search: searchReducer,\r\n};\r\n","import { createBrowserHistory, History } from 'history';\r\n\r\nconst history: History = createBrowserHistory();\r\n\r\nexport const getHistory = () => {\r\n  return history;\r\n};\r\n","export const CHANGE_SEARCH_QUERY = 'CHANGE_SEARCH_QUERY';\nexport const CLEAR_QUERY = 'CLEAR_QUERY';\n\nexport interface IChangeSearchQuery {\n  type: typeof CHANGE_SEARCH_QUERY;\n  payload: {\n    query: string,\n  };\n}\n\nexport const changeSearchString = (query: string): IChangeSearchQuery => {\n  return {\n    type: CHANGE_SEARCH_QUERY,\n    payload: {\n      query,\n    },\n  };\n};\n\nexport interface IClearQuery {\n  type: typeof CLEAR_QUERY;\n}\n\nexport const clearQuery = (): IClearQuery => {\n  return {\n    type: CLEAR_QUERY,\n  };\n};\n\nexport type ISearchAction =\nIChangeSearchQuery\n|IClearQuery;\n","import { combineReducers } from 'redux';\r\nimport { cities } from '@/pages/reducer';\r\nimport { RouterState, connectRouter } from 'connected-react-router';\r\nimport { History } from 'history';\r\nimport { search } from '@/components/app-header/reducer';\r\n\r\nconst createRootReducer = (history: any) =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    ...cities,\r\n    ...search,\r\n  });\r\n\r\nexport default createRootReducer;\r\n","import { createStore, applyMiddleware, Middleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport createRootReducer from './root-reducer';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { getHistory } from '@/utils/history/history';\r\n\r\nconst history = getHistory();\r\nconst middlewares: Middleware[] = [];\r\nconst isDev = process.env.NODE_ENV !== 'production';\r\n\r\nmiddlewares.push(routerMiddleware(history));\r\nmiddlewares.push(thunk);\r\n\r\nconst logger = createLogger({\r\n  collapsed: true,\r\n  diff: true,\r\n});\r\n\r\nif (isDev) {\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport const configureStore = (initialState?: any) => {\r\n  const store = createStore(\r\n    createRootReducer(history),\r\n    initialState,\r\n    applyMiddleware(...middlewares),\r\n  );\r\n\r\n  if (module.hot) {\r\n    module.hot.accept('./root-reducer', () => {\r\n      store.replaceReducer(createRootReducer(history));\r\n    });\r\n  }\r\n\r\n  return store;\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Table as AntTable } from 'antd';\r\nimport 'antd/lib/table/style/css';\r\n\r\nexport interface ITableProps {\r\n  dataSource: any[];\r\n  columns: any[];\r\n  loading: boolean;\r\n}\r\n\r\nexport const Table: FunctionComponent<ITableProps> = ({\r\n  dataSource,\r\n  columns,\r\n  loading,\r\n}) => {\r\n  return (\r\n    <AntTable\r\n      dataSource={dataSource}\r\n      columns={columns}\r\n      bordered\r\n      pagination={false}\r\n      size='small'\r\n      rowKey={(record: any) => record.id}\r\n      loading={loading}\r\n    />)\r\n    ;\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Button as AntButton } from 'antd';\r\nimport 'antd/lib/button/style/css';\r\n\r\nexport type ButtonSizes = 'small' | 'default' | 'large';\r\nexport type ButtonTypes = 'link' | 'default' | 'ghost' | 'primary' | 'dashed' | 'danger';\r\n\r\nexport interface IButton {\r\n  disabled?: boolean;\r\n  icon?: string;\r\n  size?: ButtonSizes;\r\n  type?: ButtonTypes;\r\n  onClick?: () => void;\r\n  className?: string;\r\n}\r\n\r\nexport const Button: FunctionComponent<IButton> = ({\r\n  disabled,\r\n  icon,\r\n  size,\r\n  type,\r\n  children,\r\n  onClick = () => false,\r\n  className = '',\r\n}) => {\r\n\r\n  return (\r\n    <AntButton\r\n      disabled={disabled}\r\n      icon={icon}\r\n      size={size}\r\n      type={type}\r\n      onClick={onClick}\r\n      className={className}\r\n    >\r\n      {children}\r\n    </AntButton>\r\n  );\r\n};\r\n","import React, { FunctionComponent, useState, useCallback, useEffect } from 'react';\r\nimport { Modal, Input } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/input/style/css';\r\n\r\nimport styles from './modal-card.scss';\r\n\r\nimport { ICity } from '@/pages/reducer';\r\nimport { GET_WEATHER_ICON } from '@/api/endpoints';\r\nimport { Button } from '../button';\r\n\r\nexport interface IModalCardProps {\r\n  isVisible: boolean;\r\n  onCancel: () => void;\r\n  onSave: (value: any) => void;\r\n  city: ICity;\r\n\r\n}\r\n\r\nexport const ModalCard: FunctionComponent<IModalCardProps> = ({\r\n  isVisible,\r\n  onCancel,\r\n  onSave,\r\n  city,\r\n}) => {\r\n\r\n  if (!city) {\r\n    return <></>;\r\n  }\r\n\r\n  const { icon, name, temperature } = city;\r\n\r\n  const [cityName, setCityName] = useState(name);\r\n  const [cityTemperature, setCityTemperature] = useState(temperature);\r\n\r\n  useEffect(() => {\r\n    setCityName(name);\r\n    setCityTemperature(temperature);\r\n  }, [name, temperature])\r\n\r\n  const handleCityChange = useCallback((event) => {\r\n    const { target: { value } } = event;\r\n    setCityName(value);\r\n  }, [])\r\n\r\n  const handleTemperatureChange = useCallback((event) => {\r\n    const { target: { value } } = event;\r\n    setCityTemperature(value);\r\n  }, []);\r\n\r\n  return (\r\n    <Modal\r\n      title={`Card of city: ${name}`}\r\n      visible={isVisible}\r\n      onCancel={onCancel}\r\n      footer={[\r\n        <Button\r\n          key={1}\r\n          disabled={!cityName || !cityTemperature}\r\n          onClick={() => onSave({ ...city, name: cityName, temperature: cityTemperature })}\r\n        >\r\n          Save\r\n        </Button>,\r\n        <Button\r\n          key={2}\r\n          type='danger'\r\n          onClick={onCancel}\r\n        >\r\n          Cancel\r\n        </Button>]}\r\n    >\r\n      <div className={styles.root}>\r\n        <div className={styles.icon}>\r\n          <img src={GET_WEATHER_ICON(icon)} alt='icon'></img>\r\n        </div>\r\n        <div className={styles.controlls}>\r\n          <Input type=\"text\" value={cityName} readOnly={false} onChange={handleCityChange} />\r\n          <Input type=\"text\" value={cityTemperature} onChange={handleTemperatureChange} />\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n\r\n  )\r\n}","import React, { useState, useCallback } from 'react';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport styles from './pages.scss';\r\n\r\nimport { ICity } from './reducer';\r\nimport { Button } from '@/components/button';\r\nimport { moveUpCity, moveDownCity, restoreCity, removeCity, addCitySuccess } from './actions';\r\nimport { PageTypes } from '@/app/types';\r\nimport { GET_WEATHER_ICON } from '@/api/endpoints';\r\nimport { ModalCard } from '@/components/modal-card';\r\nimport { ModalConfirm } from '@/components/modal-confirm';\r\n\r\nexport const useTable = (list: ICity[], dispatch: Dispatch, pageType: PageTypes) => {\r\n\r\n  const [isVisible, toggleVisiblity] = useState(false);\r\n  const [currentCity, setCurrentCity] = useState();\r\n\r\n  const onCancel = useCallback(() => {\r\n    toggleVisiblity(false);\r\n  }, []);\r\n\r\n  const onSave = useCallback((city: ICity) => {\r\n    dispatch(addCitySuccess(city));\r\n    toggleVisiblity(false);\r\n  }, []);\r\n\r\n  const showModal = useCallback((city: ICity) => {\r\n    setCurrentCity(city);\r\n    toggleVisiblity(!isVisible);\r\n  }, []);\r\n\r\n  const onRestore = useCallback((id:string) => {\r\n    dispatch(restoreCity(id));\r\n  }, [dispatch]);\r\n\r\n  const dataSource = list.slice()\r\n    .sort((a: ICity, b: ICity) => a.position > b.position ? -1 : 1)\r\n    .filter(city => {\r\n      switch (pageType) {\r\n        case 'DELETED': {\r\n          return city.isDeleted === true;\r\n        }\r\n        case 'ACTIVE': {\r\n          return city.isDeleted === false;\r\n        }\r\n        default:\r\n          return city;\r\n      }\r\n    });\r\n\r\n  const columns = [\r\n    {\r\n      title: 'City',\r\n      dataIndex: 'city',\r\n      key: 'city',\r\n      render: (text: string, record: any) =>\r\n        <>\r\n          <Button\r\n            type='link'\r\n            onClick={() => showModal(record)}\r\n          >\r\n            {record.name}\r\n          </Button>\r\n          {<ModalCard isVisible={isVisible} onCancel={onCancel} onSave={onSave} city={currentCity} />}\r\n        </>,\r\n    },\r\n    {\r\n      title: 'Icon',\r\n      dataIndex: 'icon',\r\n      key: 'icon',\r\n      width: 100,\r\n      render: (text: string, record: any) =>\r\n        <img className={styles.icon} src={GET_WEATHER_ICON(record.icon)} alt='icon' />\r\n    },\r\n    {\r\n      title: 'Temperature',\r\n      dataIndex: 'temperature',\r\n      key: 'temperature',\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      dataIndex: '',\r\n      key: 'actions',\r\n      render: (text: string, record: any) =>\r\n        <div className={styles.buttonGroup}>\r\n          <Button\r\n            icon='caret-up'\r\n            size='small'\r\n            onClick={() => dispatch(moveUpCity(record.id))}\r\n            className={styles.buttonItem}\r\n          >\r\n            Up\r\n          </Button>\r\n          <Button\r\n            icon='caret-down'\r\n            size='small'\r\n            onClick={() => dispatch(moveDownCity(record.id))}\r\n            className={styles.buttonItem}\r\n          >\r\n            Down\r\n            </Button>\r\n          <Button\r\n            icon={record.isDeleted ? 'select' : 'rest'}\r\n            type={record.isDeleted ? 'primary' : 'danger'}\r\n            size='small'\r\n            onClick={record.isDeleted ? () => onRestore(record.id) :() => ModalConfirm(record, dispatch)}\r\n            className={styles.buttonItem}\r\n          >\r\n            {record.isDeleted ? 'Restore' : 'Remove'}\r\n          </Button>\r\n        </div>,\r\n    },\r\n  ];\r\n\r\n  return {\r\n    dataSource,\r\n    columns,\r\n  };\r\n};\r\n","import React, { FunctionComponent, useState, useCallback, useEffect } from 'react';\nimport { Modal } from 'antd';\nimport 'antd/lib/modal/style/css';\nimport 'antd/lib/input/style/css';\nimport { ICity } from '@/pages/reducer';\nimport { Dispatch } from 'redux';\nimport { removeCity } from '@/pages/actions';\n\nconst { confirm } = Modal;\n\nexport const ModalConfirm = (city:ICity, dispatch:Dispatch) => {\n  const onCancel =  () => false;\n\n  return confirm({\n    title: `Are you sure delete the city ${city.name} ?`,\n    content: 'Some descriptions',\n    okText: 'Yes',\n    okType: 'danger',\n    cancelText: 'No',\n    onOk () {\n      dispatch(removeCity(city.id));\n    },\n    onCancel,\n  });\n};\n","\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport styles from '../pages.scss';\r\n\r\nimport { Table } from '@/components/table';\r\nimport { useTable } from '../selector';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { citiesSelector } from '../reducer';\r\n\r\nexport const All: FunctionComponent<{}> = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const state = useSelector(citiesSelector);\r\n  const { list, isPending } = state;\r\n  const { dataSource, columns } = useTable(list, dispatch, 'ALL');\r\n\r\n  return <div className={styles.root}>\r\n    <Table columns={columns} dataSource={dataSource} loading={isPending} />\r\n  </div>;\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport styles from '../pages.scss';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { citiesSelector } from '../reducer';\r\nimport { useTable } from '../selector';\r\nimport { Table } from '@/components/table';\r\n\r\nexport const Active: FunctionComponent<{}> = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const state = useSelector(citiesSelector);\r\n  const { list, isPending } = state;\r\n  const { dataSource, columns } = useTable(list, dispatch, 'ACTIVE');\r\n\r\n  return <div className={styles.root}>\r\n    <Table columns={columns} dataSource={dataSource} loading={isPending} />\r\n  </div>;\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport styles from '../pages.scss';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { citiesSelector } from '../reducer';\r\nimport { useTable } from '../selector';\r\nimport { Table } from '@/components/table';\r\n\r\nexport const Deleted: FunctionComponent<{}> = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const state = useSelector(citiesSelector);\r\n  const { list, isPending } = state;\r\n  const { dataSource, columns } = useTable(list, dispatch, 'DELETED');\r\n\r\n  return <div className={styles.root}>\r\n    <Table columns={columns} dataSource={dataSource} loading={isPending} />\r\n  </div>;\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Input, Button } from 'antd';\r\nimport 'antd/lib/input/style/css';\r\nimport 'antd/lib/page-header/style/css';\r\n\r\nimport styles from './app-header-view.scss';\r\n\r\nexport interface IAppHeaderViewProps {\r\n  error?: string;\r\n  onQueryChange: (value: any) => void;\r\n  onSearch: () => void;\r\n  query: string;\r\n}\r\n\r\nexport const AppHeaderView: FunctionComponent<IAppHeaderViewProps> = ({\r\n  error,\r\n  onQueryChange,\r\n  onSearch,\r\n  query,\r\n}) => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className={styles.error}>{error}</div>\r\n      <div className={styles.search}>\r\n        <Input\r\n          placeholder='input city name'\r\n          onChange={onQueryChange}\r\n          onPressEnter={onSearch}\r\n          value={query}\r\n        />\r\n        <Button type='primary' icon='search' onClick={onSearch}>Search</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FunctionComponent, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { AppHeaderView } from './app-header-view';\r\nimport { changeSearchString } from './actions';\r\nimport { searchSelector } from './reducer';\r\nimport { searchCity } from '@/pages/actions';\r\nimport { citiesSelector } from '@/pages/reducer';\r\n\r\nexport const AppHeader: FunctionComponent<{}> = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const stateSearch = useSelector(searchSelector);\r\n  const stateCities = useSelector(citiesSelector);\r\n  const { error } = stateCities;\r\n  const { query } = stateSearch;\r\n\r\n  const onQueryChange = useCallback((event) => {\r\n    const { target: { value } } = event;\r\n    dispatch(changeSearchString(value));\r\n  }, [dispatch]);\r\n\r\n  const onSearch = useCallback(() => {\r\n    dispatch(searchCity(query));\r\n  }, [dispatch, query])\r\n\r\n  const appHeaderProps = {\r\n    error,\r\n    onQueryChange,\r\n    onSearch,\r\n    query,\r\n  };\r\n\r\n  return (\r\n    <AppHeaderView  {...appHeaderProps} />\r\n  );\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\nimport styles from './app-footer.scss';\r\n\r\nexport const AppFooter: FunctionComponent<{}> = () => {\r\n\r\n  return (\r\n      <footer className={styles.root}>\r\n        <div className={styles.footer}>weather 2019</div>\r\n      </footer>\r\n  );\r\n};\r\n","import React, { FunctionComponent, ReactNode } from 'react';\r\nimport { Tabs as AntTabs } from 'antd';\r\nimport 'antd/lib/tabs/style/css';\r\n\r\nimport styles from './tabs.scss';\r\n\r\nconst { TabPane } = AntTabs;\r\n\r\nexport interface ITab {\r\n  caption: string;\r\n  id: string;\r\n}\r\nexport interface ITabsProps {\r\n  onChange: (value: any) => void;\r\n  tabs: ITab[];\r\n  content?: ReactNode[];\r\n}\r\n\r\nexport const Tabs: FunctionComponent<ITabsProps> = ({ onChange, tabs, content }) => {\r\n\r\n  const renderTabs = tabs.map(tab => {\r\n    return <TabPane tab={tab.caption} key={tab.id}>{content}</TabPane>;\r\n  });\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <AntTabs onChange={onChange} type='card' size='small'>\r\n        {renderTabs}\r\n      </AntTabs>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport styles from './app-content-view.scss';\r\n\r\nimport { Tabs } from '@/components/tabs';\r\nimport { ITab } from '../tabs/tabs';\r\n\r\nexport interface IAppContentViewProps {\r\n  onTabChange: (value: any) => void;\r\n  tabs: ITab[];\r\n}\r\n\r\nexport const AppContentView: FunctionComponent<IAppContentViewProps> = ({ onTabChange, tabs, children }) => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <Tabs onChange={onTabChange} tabs={tabs} />\r\n      <div className={styles.table}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FunctionComponent, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { push } from 'connected-react-router';\r\nimport { AppContentView } from './app-content-view';\r\n\r\nexport const AppContent: FunctionComponent<{}> = ({ children }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onTabChange = useCallback((activeTab: string) => {\r\n    dispatch(push(`/${activeTab}`));\r\n  }, [dispatch]);\r\n\r\n  const appContentProps = {\r\n    onTabChange,\r\n    tabs: [\r\n      {\r\n        caption: 'All',\r\n        id: 'all',\r\n      },\r\n      {\r\n        caption: 'Active',\r\n        id: 'active',\r\n      },\r\n      {\r\n        caption: 'Deleted',\r\n        id: 'deleted',\r\n      }],\r\n    children,\r\n  };\r\n\r\n  return (\r\n    <AppContentView  {...appContentProps} />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { hot } from 'react-hot-loader/root';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { Provider, ReactReduxContext } from 'react-redux';\r\n\r\nimport '@/styles/global.scss';\r\n\r\nimport { Header, Content, Footer, Layout } from '@/components/layout';\r\nimport { configureStore } from '@/store/store';\r\nimport { All } from '@/pages/all';\r\nimport { Active } from '@/pages/active';\r\nimport { Deleted } from '@/pages/deleted';\r\nimport { AppHeader } from '@/components/app-header';\r\nimport { AppFooter } from '@/components/app-footer';\r\nimport { getHistory } from '@/utils/history/history';\r\nimport { AppContent } from '@/components/app-content';\r\n\r\nconst store = configureStore();\r\n\r\nclass App extends React.Component<{}> {\r\n  public render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <ConnectedRouter history={getHistory()} context={ReactReduxContext}>\r\n          <Layout>\r\n            <Header>\r\n              <AppHeader />\r\n            </Header>\r\n            <Content>\r\n              <AppContent>\r\n                <Switch>\r\n                  <Route path='/all' component={All} />\r\n                  <Route path='/active' component={Active} />\r\n                  <Route path='/deleted' component={Deleted} />\r\n                  <Redirect to='/all' />\r\n                </Switch>\r\n              </AppContent>\r\n            </Content>\r\n            <Footer>\r\n              <AppFooter />\r\n            </Footer>\r\n          </Layout>\r\n        </ConnectedRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default hot(App);\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\n\r\nimport App from './app/app';\r\n\r\nrender(<App />, document.getElementById('reactContainer'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"modal-card_root_1EiOk\",\"icon\":\"modal-card_icon_2uuLk\",\"controlls\":\"modal-card_controlls_1XH39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"app-header-view_root_3s5vH\",\"search\":\"app-header-view_search_3nTcg\",\"error\":\"app-header-view_error_2YXUY\"};"],"sourceRoot":""}